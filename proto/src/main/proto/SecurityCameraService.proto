syntax = "proto3";

option java_multiple_files = true;
option java_package = "generated.grpc.securitycameraservice";
option java_outer_classname = "SecurityCameraServiceImpl";

package SecurityCameraService;

service SecurityCameraService {
  // Video transmission and reception + real-time operation (zoom, pan, etc.) 映像送受信＋リアルタイム操作（ズーム、パンなど）
  // Bidirectional streaming
  rpc StreamLiveCamera (stream CameraControl) returns (stream CameraFeed);

  // Motion detection → single notification モーション検知 → 単発通知
  // unary
  rpc SendMotionAlert (MotionEvent) returns (MotionAck);

  // Still image notification (sever sends several images). 静止画通知（サーバーが何枚か送る）
  // Server streaming
  rpc ReceiveCameraSnapshots (SnapshotRequest) returns (stream SnapshotImage);

  // Send past logs collectively on the client side. クライアント側で過去のログをまとめて送信
  // Client Streaming
  rpc UploadCameraLog (stream CameraLogEntry) returns (UploadResult);
}

// ====== Define the message ======

message CameraControl {
  string command = 1;        // ex: "zoom_in", "pan_left"
  string camera_id = 2;
}

message CameraFeed {
  bytes video_chunk = 1;
  string status = 2;         // ex: "OK", "ERROR"
}

message MotionEvent {
  string camera_id = 1;
  string motion_type = 2;    // ex: "movement", "face_detected"
  string timestamp = 3;
}

message MotionAck {
  string message = 1;
  string received_at = 2;
}

message SnapshotRequest {
  string camera_id = 1;
  int32 count = 2;           // How many shots you need
}

message SnapshotImage {
  bytes image_data = 1;
  string timestamp = 2;
}

message CameraLogEntry {
  string log_type = 1;       // ex: "event", "error"
  string description = 2;
  string timestamp = 3;
}

message UploadResult {
  int32 entry_count = 1;
  string message = 2;
}